name: Package

on: [push]

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        pip install nomkl numpy scipy tensorflow>=2.12.0
    - name: Lint with flake8
      run: |
        pip install flake8 flake8-docstrings
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --ignore E203 --extend-exclude amber_tests --max-complexity=10 --max-line-length=80 --statistics
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest --cov=amber amber-tests
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        pip install numpy scipy tensorflow>=2.12.0
    - name: Lint with flake8 flake8-docstrings
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --ignore E203 --extend-exclude amber_tests --max-complexity=10 --max-line-length=80 --statistics
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest --cov=amber amber-tests

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
